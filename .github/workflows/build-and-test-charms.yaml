name: Build and test charms

on:
  push:
  pull_request:

env:
  DEBIAN_FRONTEND: noninteractive
  ROCKCRAFT_ENABLE_EXPERIMENTAL_EXTENSIONS: "True"

jobs:
  define-charm-list:
    name: Define charm list to build
    runs-on: ubuntu-24.04
    outputs:
      charms: ${{ steps.charms.outputs.charms }}
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          persist-credentials: false

      - name: Generate list
        id: charms
        run: |
          list="$(find . -mindepth 1 -maxdepth 1 -type d -printf '"%P", ')"
          echo "charms=[$list]"
          echo "charms=[$list]" >> $GITHUB_OUTPUT
        working-directory: charms

  lint:
    name: Lint - (${{ matrix.charm }})
    runs-on: ubuntu-24.04
    needs:
      - define-charm-list
    strategy:
      fail-fast: false
      matrix:
        charm: ${{ fromJSON(needs.define-charm-list.outputs.charms) }}
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          persist-credentials: false
      - name: Install dependencies
        run: sudo snap install ruff --classic
      - name: Run linters
        run: ruff check --preview .
        working-directory: charms/${{ matrix.charm }}

  lib-check:
    name: Check libraries - (${{ matrix.charm }})
    runs-on: ubuntu-24.04
    needs:
      - define-charm-list
    strategy:
      matrix:
        charm: ${{ fromJSON(needs.define-charm-list.outputs.charms) }}
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          # fetch-depth: 0 # TODO optimize that for speed
          persist-credentials: false
      - name: Check libs
        uses: canonical/charming-actions/check-libraries@1753e0803f70445132e92acd45c905aba6473225 # 2.7.0
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          charm-path: charms/${{ matrix.charm }}

  pack-charm:
    name: Build charm - (${{ matrix.charm }})
    runs-on: ubuntu-24.04
    needs:
      - define-charm-list
    strategy:
      matrix:
        charm: ${{ fromJSON(needs.define-charm-list.outputs.charms) }}
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          persist-credentials: false

      - name: Setup LXD
        uses: canonical/setup-lxd@a3c85fc6fb7fff43fcfeae87659e41a8f635b7dd

      - name: Install and bootstrap toolchains
        run: |
          sudo snap install astral-uv --classic
          sudo snap install concierge --classic
          sudo concierge prepare --preset microk8s

      - name: Pack rock
        id: rockcraft
        run: |
          rockcraft pack -v
          echo rock=$(ls *.rock) >> $GITHUB_OUTPUT

      - name: Upload rock artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ steps.rockcraft.outputs.rock }}
          path: ${{ steps.rockcraft.outputs.rock }}

      - name: Log in to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload rock
        run: |
          rockcraft.skopeo --insecure-policy copy --dest-tls-verify=false oci-archive:${{ steps.rockcraft.outputs.rock }} docker://ghcr.io/ubuntu/ubuntu-release/ubuntu-release-worker:${{ github.sha }}

      - name: Update upstream-source
        shell: python
        run: |
          import os
          import yaml
          import pathlib

          charmcraft_yaml = yaml.safe_load(open("charmcraft.yaml"))
          resources = charmcraft_yaml["resources"]
          resources[list(resources)[0]]["upstream-source"] = "ghcr.io/ubuntu/ubuntu-release/ubuntu-release-worker:${{ github.sha }}"
          yaml.dump(charmcraft_yaml, open("charmcraft.yaml", "w"), sort_keys=False)
          print("charmcraft.yaml content:")
          print(" BEGIN YAML ".center(80, '-'))
          print(pathlib.Path("charmcraft.yaml").read_text())
          print(" END YAML ".center(80, '-'))
        working-directory: charms/${{ matrix.charm }}

      - name: Pack charm
        run: charmcraft pack -v
        working-directory: charms/${{ matrix.charm }}

      - name: Test charm
        run: uv run pytest tests/ -vv --log-level=INFO -o log_cli=1
        working-directory: charms/${{ matrix.charm }}

      - name: Upload charm artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ matrix.charm }}.charm
          path: charms/${{ matrix.charm }}/*.charm

      - name: Upload charm to charmhub
        uses: canonical/charming-actions/upload-charm@1753e0803f70445132e92acd45c905aba6473225 # 2.7.0
        with:
          credentials: '${{ secrets.CHARMHUB_TOKEN }}'
          github-token: '${{ secrets.GITHUB_TOKEN }}'
          charm-path: charms/${{ matrix.charm }}
          tag-prefix: ${{ matrix.charm }}
          built-charm-path: ubuntu-release-${{ matrix.charm }}_ubuntu@24.04-amd64.charm
        if: github.ref == 'refs/heads/main'
